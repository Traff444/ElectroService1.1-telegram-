import { createClient } from '@supabase/supabase-js';

const supabaseUrl = 'https://enyewzeskpiqueogmssp.supabase.co';
const supabaseAnonKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImVueWV3emVza3BpcXVlb2dtc3NwIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTYyOTA4MDcsImV4cCI6MjA3MTg2NjgwN30.KdkzBPdw6lrCE2LW2epl9JDtcOjSccW8rkon4DVrINE';

const supabase = createClient(supabaseUrl, supabaseAnonKey);

async function checkBaltiktreydUser() {
  const email = 'baltiktreyd@gmail.com';
  const password = '327856';
  
  console.log('üîç –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è baltiktreyd@gmail.com');
  console.log('=' .repeat(50));
  
  // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –≤ —Ç–∞–±–ª–∏—Ü–µ users
  console.log('\nüìã –®–∞–≥ 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤ —Ç–∞–±–ª–∏—Ü–µ users...');
  const { data: userData, error: userError } = await supabase
    .from('users')
    .select('*')
    .eq('email', email)
    .single();
    
  if (userError) {
    console.log('‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ù–ï –Ω–∞–π–¥–µ–Ω –≤ —Ç–∞–±–ª–∏—Ü–µ users');
    console.log('   –û—à–∏–±–∫–∞:', userError.message);
  } else {
    console.log('‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–π–¥–µ–Ω –≤ —Ç–∞–±–ª–∏—Ü–µ users:');
    console.log(`   - ID: ${userData.id}`);
    console.log(`   - Email: ${userData.email}`);
    console.log(`   - –ò–º—è: ${userData.full_name}`);
    console.log(`   - –†–æ–ª—å: ${userData.role}`);
    console.log(`   - –ê–∫—Ç–∏–≤–µ–Ω: ${userData.is_active}`);
    console.log(`   - –°–æ–∑–¥–∞–Ω: ${userData.created_at}`);
  }
  
  // 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–≤—è–∑—å –≤ telegram_users
  console.log('\nüì± –®–∞–≥ 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤ telegram_users...');
  if (userData) {
    const { data: telegramData, error: telegramError } = await supabase
      .from('telegram_users')
      .select('*')
      .eq('user_id', userData.id)
      .single();
      
    if (telegramError) {
      console.log('‚ùå –°–≤—è–∑—å —Å Telegram –ù–ï –Ω–∞–π–¥–µ–Ω–∞');
      console.log('   –û—à–∏–±–∫–∞:', telegramError.message);
    } else {
      console.log('‚úÖ –°–≤—è–∑—å —Å Telegram –Ω–∞–π–¥–µ–Ω–∞:');
      console.log(`   - Telegram ID: ${telegramData.telegram_id}`);
      console.log(`   - User ID: ${telegramData.user_id}`);
    }
  }
  
  // 3. –ü—Ä–æ–±—É–µ–º –≤–æ–π—Ç–∏ —Å –ø–∞—Ä–æ–ª–µ–º
  console.log('\nüîê –®–∞–≥ 3: –ü–æ–ø—ã—Ç–∫–∞ –≤—Ö–æ–¥–∞ —Å –ø–∞—Ä–æ–ª–µ–º...');
  const { data: signInData, error: signInError } = await supabase.auth.signInWithPassword({
    email: email,
    password: password
  });
  
  if (signInError) {
    console.log('‚ùå –û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞:', signInError.message);
    
    // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ auth, –ø—Ä–æ–±—É–µ–º —Å–æ–∑–¥–∞—Ç—å
    if (signInError.message.includes('Invalid login credentials')) {
      console.log('\nüîÑ –ü–æ–ø—ã—Ç–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ auth.users...');
      const { data: signUpData, error: signUpError } = await supabase.auth.signUp({
        email: email,
        password: password,
        options: {
          data: {
            full_name: 'Baltik Treyd'
          }
        }
      });
      
      if (signUpError) {
        console.log('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', signUpError.message);
      } else {
        console.log('‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–∑–¥–∞–Ω –≤ auth.users');
        console.log(`   - ID: ${signUpData.user.id}`);
        
        // –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Ñ–∏–ª—å –≤ users, –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
        if (!userData) {
          console.log('\nüîÑ –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è –≤ —Ç–∞–±–ª–∏—Ü–µ users...');
          const { data: profileData, error: profileError } = await supabase
            .from('users')
            .insert({
              id: signUpData.user.id,
              email: email,
              full_name: 'Baltik Treyd',
              role: 'worker',
              is_active: true,
              hourly_rate: 2.0
            })
            .select()
            .single();
            
          if (profileError) {
            console.log('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è:', profileError.message);
          } else {
            console.log('‚úÖ –ü—Ä–æ—Ñ–∏–ª—å —Å–æ–∑–¥–∞–Ω –≤ —Ç–∞–±–ª–∏—Ü–µ users');
          }
        }
        
        // –í—ã—Ö–æ–¥–∏–º –∏–∑ —Å–∏—Å—Ç–µ–º—ã
        await supabase.auth.signOut();
      }
    }
  } else {
    console.log('‚úÖ –í—Ö–æ–¥ —É—Å–ø–µ—à–µ–Ω!');
    console.log(`   - ID: ${signInData.user.id}`);
    console.log(`   - Email: ${signInData.user.email}`);
    console.log(`   - –ò–º—è: ${signInData.user.user_metadata?.full_name || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}`);
    
    // –í—ã—Ö–æ–¥–∏–º –∏–∑ —Å–∏—Å—Ç–µ–º—ã
    await supabase.auth.signOut();
  }
  
  // 4. –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
  console.log('\nüîç –®–∞–≥ 4: –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞...');
  const { data: finalUserData, error: finalUserError } = await supabase
    .from('users')
    .select('*')
    .eq('email', email)
    .single();
    
  if (finalUserError) {
    console.log('‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—Å–µ –µ—â–µ –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Ç–∞–±–ª–∏—Ü–µ users');
  } else {
    console.log('‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–π–¥–µ–Ω –≤ —Ç–∞–±–ª–∏—Ü–µ users:');
    console.log(`   - ID: ${finalUserData.id}`);
    console.log(`   - Email: ${finalUserData.email}`);
    console.log(`   - –ò–º—è: ${finalUserData.full_name}`);
    console.log(`   - –†–æ–ª—å: ${finalUserData.role}`);
    console.log(`   - –ê–∫—Ç–∏–≤–µ–Ω: ${finalUserData.is_active}`);
  }
  
  console.log('\n' + '=' .repeat(50));
  console.log('üéØ –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:');
  
  if (!userData) {
    console.log('1. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ —Ç–∞–±–ª–∏—Ü–µ users');
    console.log('2. –ù—É–∂–Ω–æ —Å–æ–∑–¥–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å –≤ —Ç–∞–±–ª–∏—Ü–µ users');
  }
  
  if (userData && !userData.is_active) {
    console.log('1. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ–∞–∫—Ç–∏–≤–µ–Ω');
    console.log('2. –ù—É–∂–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å is_active = true');
  }
  
  if (signInError && signInError.message.includes('Invalid login credentials')) {
    console.log('1. –ù–µ–≤–µ—Ä–Ω—ã–π –ø–∞—Ä–æ–ª—å –∏–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ auth.users');
    console.log('2. –ù—É–∂–Ω–æ —Å–æ–∑–¥–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ auth.users –∏–ª–∏ —Å–±—Ä–æ—Å–∏—Ç—å –ø–∞—Ä–æ–ª—å');
  }
  
  console.log('\nüí° –î–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å–∫—Ä–∏–ø—Ç create_telegram_user.mjs');
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫—É
checkBaltiktreydUser();

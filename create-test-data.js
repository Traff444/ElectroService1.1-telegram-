#!/usr/bin/env node

/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö –¥–ª—è Telegram Mini App
 */

import { createClient } from '@supabase/supabase-js'

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Supabase
const supabaseUrl = 'http://127.0.0.1:54321'
const supabaseAnonKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZS1kZW1vIiwicm9sZSI6ImFub24iLCJleHAiOjE5ODM4MTI5OTZ9.CRXP1A7WOeoJeXxjNni43kdQwgnWNReilDMblYTn_I0'

const supabase = createClient(supabaseUrl, supabaseAnonKey)

async function createTestData() {
  console.log('üöÄ –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö –¥–ª—è Telegram Mini App...\n')

  try {
    // 1. –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Ä–∞–±–æ—á–µ–≥–æ
    console.log('üë§ –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Ä–∞–±–æ—á–µ–≥–æ...')
    const { data: worker, error: workerError } = await supabase.auth.signUp({
      email: 'test.worker@electroservice.by',
      password: 'telegram_481890'
    })

    if (workerError && !workerError.message.includes('already registered')) {
      throw workerError
    }

    if (worker.user) {
      console.log(`‚úÖ –†–∞–±–æ—á–∏–π —Å–æ–∑–¥–∞–Ω: ${worker.user.email}`)

      // –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–æ—Ñ–∏–ª—å —Ä–∞–±–æ—á–µ–≥–æ
      const { error: profileError } = await supabase
        .from('users')
        .upsert({
          id: worker.user.id,
          email: worker.user.email,
          full_name: '–¢–µ—Å—Ç–æ–≤—ã–π –†–∞–±–æ—á–∏–π',
          role: 'worker',
          is_active: true
        })

      if (profileError) {
        console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è —Ä–∞–±–æ—á–µ–≥–æ:', profileError)
      } else {
        console.log('‚úÖ –ü—Ä–æ—Ñ–∏–ª—å —Ä–∞–±–æ—á–µ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω')
      }
    }

    // 2. –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–¥–∞—á
    console.log('\nüìä –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...')
    const { data: users, error: usersError } = await supabase
      .from('users')
      .select('id, email, role')

    if (usersError) {
      throw usersError
    }

    console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ${users.length}`)
    users.forEach(user => {
      console.log(`   ${user.role}: ${user.email}`)
    })

    // 3. –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –∑–∞–¥–∞—á–∏
    console.log('\nüìã –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –∑–∞–¥–∞—á...')

    const workerUser = users.find(u => u.role === 'worker')
    const managerUser = users.find(u => u.role === 'manager')

    if (!workerUser) {
      console.error('‚ùå –†–∞–±–æ—á–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω!')
      return
    }

    const tasks = [
      {
        title: '–£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ä–æ–∑–µ—Ç–∫–∏ –≤ –æ—Ñ–∏—Å–µ',
        description: '–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –¥–≤–æ–π–Ω—É—é —Ä–æ–∑–µ—Ç–∫—É –≤ –∫–∞–±–∏–Ω–µ—Ç–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∞',
        priority: 'high',
        status: 'pending',
        assigned_to: workerUser.id,
        created_by: managerUser?.id || workerUser.id,
        estimated_hours: 1.5,
        target_location: '–ö–∞–±–∏–Ω–µ—Ç –¥–∏—Ä–µ–∫—Ç–æ—Ä–∞, 3 —ç—Ç–∞–∂'
      },
      {
        title: '–ó–∞–º–µ–Ω–∞ –≤—ã–∫–ª—é—á–∞—Ç–µ–ª—è –≤ –∫–æ—Ä–∏–¥–æ—Ä–µ',
        description: '–ó–∞–º–µ–Ω–∏—Ç—å —Å—Ç–∞—Ä—ã–π –≤—ã–∫–ª—é—á–∞—Ç–µ–ª—å –Ω–∞ –Ω–æ–≤—ã–π —Å –ø–æ–¥—Å–≤–µ—Ç–∫–æ–π',
        priority: 'medium',
        status: 'in_progress',
        assigned_to: workerUser.id,
        created_by: managerUser?.id || workerUser.id,
        estimated_hours: 1,
        started_at: new Date().toISOString(),
        target_location: '–ö–æ—Ä–∏–¥–æ—Ä, 2 —ç—Ç–∞–∂'
      },
      {
        title: '–ú–æ–Ω—Ç–∞–∂ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–∏—Ç–µ–ª—å–Ω–æ–π –∫–æ—Ä–æ–±–∫–∏',
        description: '–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∏ –ø–æ–¥–∫–ª—é—á–∏—Ç—å —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–∏—Ç–µ–ª—å–Ω—É—é –∫–æ—Ä–æ–±–∫—É –≤ –ø–æ–¥–≤–∞–ª–µ',
        priority: 'low',
        status: 'pending',
        assigned_to: workerUser.id,
        created_by: managerUser?.id || workerUser.id,
        estimated_hours: 3,
        target_location: '–ü–æ–¥–≤–∞–ª, –ø–æ–º–µ—â–µ–Ω–∏–µ —ç–ª–µ–∫—Ç—Ä–æ—Å–Ω–∞–±–∂–µ–Ω–∏—è'
      }
    ]

    for (const taskData of tasks) {
      const { data: task, error: taskError } = await supabase
        .from('tasks')
        .insert(taskData)
        .select()

      if (taskError) {
        console.error(`‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–¥–∞—á–∏ "${taskData.title}":`, taskError)
      } else {
        console.log(`‚úÖ –ó–∞–¥–∞—á–∞ —Å–æ–∑–¥–∞–Ω–∞: ${task[0].title}`)
      }
    }

    // 4. –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—É—é —Å–º–µ–Ω—É
    console.log('\n‚è∞ –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–π —Å–º–µ–Ω—ã...')

    const { data: session, error: sessionError } = await supabase
      .from('work_sessions')
      .insert({
        user_id: workerUser.id,
        start_time: new Date().toISOString(),
        start_location: '53.902284,27.561831' // –ú–∏–Ω—Å–∫, —Å–ª—É—á–∞–π–Ω—ã–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã
      })
      .select()

    if (sessionError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Å–º–µ–Ω—ã:', sessionError)
    } else {
      console.log('‚úÖ –°–º–µ–Ω–∞ —Å–æ–∑–¥–∞–Ω–∞ –¥–ª—è —Ä–∞–±–æ—á–µ–≥–æ')
    }

    // 5. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–∑–¥–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    console.log('\nüìä –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö...')

    const { data: finalTasks, error: finalTasksError } = await supabase
      .from('tasks')
      .select('id, title, status, assigned_to')

    if (!finalTasksError) {
      console.log(`üìã –í—Å–µ–≥–æ –∑–∞–¥–∞—á: ${finalTasks.length}`)
      finalTasks.forEach(task => {
        console.log(`   - ${task.title} (${task.status})`)
      })
    }

    const { data: sessions, error: sessionsError } = await supabase
      .from('work_sessions')
      .select('id, start_time, end_time')
      .is('end_time', null)

    if (!sessionsError) {
      console.log(`‚è∞ –ê–∫—Ç–∏–≤–Ω—ã—Ö —Å–º–µ–Ω: ${sessions.length}`)
    }

    console.log('\nüéâ –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ —Å–æ–∑–¥–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ!')
    console.log('\nüìù –¢–µ—Å—Ç–æ–≤—ã–µ –∞–∫–∫–∞—É–Ω—Ç—ã:')
    console.log('   –†–∞–±–æ—á–∏–π: test.worker@electroservice.by / telegram_481890')
    console.log('\nüåê Telegram Mini App –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É:')
    console.log('   http://localhost:5175')
    console.log('\nüß™ –¢–µ—Å—Ç–æ–≤–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞:')
    console.log('   http://localhost:5175/test-standalone.html')

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö:', error)
    process.exit(1)
  }
}

// –ó–∞–ø—É—Å–∫ —Å–∫—Ä–∏–ø—Ç–∞
createTestData()

#!/usr/bin/env node
const fetch = (...args) => import('node-fetch').then(({default: fetch}) => fetch(...args));

const TOKEN = '8004824610:AAFJQATOO_IJc8l-6yw9ZOzHcufpHSFt4RI';
let offset = 0;

async function sendMessage(chatId, text, parseMode) {
  await fetch(`https://api.telegram.org/bot${TOKEN}/sendMessage`, {
    method: 'POST',
    headers: { 'Content-Type': 'application/json' },
    body: JSON.stringify({ chat_id: chatId, text, parse_mode: parseMode })
  });
}

function welcome(from, chatId) {
  const msg = `üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ *–≠–ª–µ–∫—Ç—Ä–æ–°–µ—Ä–≤–∏—Å!*
\n–≠—Ç–æ—Ç –±–æ—Ç –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω –¥–ª—è –º–µ–Ω–µ–¥–∂–µ—Ä–æ–≤ –∏ –¥–∏—Ä–µ–∫—Ç–æ—Ä–æ–≤ –∫–æ–º–ø–∞–Ω–∏–∏.
\nüîó *–î–ª—è —Å–≤—è–∑–∏ –∞–∫–∫–∞—É–Ω—Ç–∞:*
1. –í–æ–π–¥–∏—Ç–µ –≤ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å —Å–∏—Å—Ç–µ–º—ã
2. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ "–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ—Ñ–∏–ª—è"
3. –í–≤–µ–¥–∏—Ç–µ –≤–∞—à Telegram ID: \`${from.id}\`
4. –ù–∞–∂–º–∏—Ç–µ "–°–≤—è–∑–∞—Ç—å –∞–∫–∫–∞—É–Ω—Ç"
\nüì± *–ü–æ—Å–ª–µ —Å–≤—è–∑–∫–∏ –≤—ã –±—É–¥–µ—Ç–µ –ø–æ–ª—É—á–∞—Ç—å:*
‚Ä¢ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã—Ö –∑–∞–¥–∞—á–∞—Ö
‚Ä¢ –§–æ—Ç–æ-–æ—Ç—á–µ—Ç—ã –æ—Ç —Ä–∞–±–æ—á–∏—Ö
‚Ä¢ –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø—Ä–∏–Ω–∏–º–∞—Ç—å/–æ—Ç–∫–ª–æ–Ω—è—Ç—å —Ä–∞–±–æ—Ç—ã
\n‚ùì –î–ª—è —Å–ø—Ä–∞–≤–∫–∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ /help`;
  return sendMessage(chatId, msg, 'Markdown');
}

function help(chatId) {
  const msg = `ÔøΩÔøΩ *–°–ø—Ä–∞–≤–∫–∞ –ø–æ –≠–ª–µ–∫—Ç—Ä–æ–°–µ—Ä–≤–∏—Å –±–æ—Ç—É*\n\n–ö–æ–º–∞–Ω–¥—ã:\n/start ‚Äî –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –∏ —Å–≤—è–∑–∫–∞ –∞–∫–∫–∞—É–Ω—Ç–∞\n/help ‚Äî —Å–ø—Ä–∞–≤–∫–∞`;
  return sendMessage(chatId, msg, 'Markdown');
}

async function poll() {
  try {
    const res = await fetch(`https://api.telegram.org/bot${TOKEN}/getUpdates?timeout=25&offset=${offset}&allowed_updates=[\"message\"]`);
    const data = await res.json();
    if (!data.ok) return setTimeout(poll, 1000);

    for (const upd of data.result) {
      offset = upd.update_id + 1;
      const msg = upd.message;
      if (!msg || !msg.text) continue;
      const text = msg.text.trim().toLowerCase();
      if (text === '/start') {
        await welcome(msg.from, msg.chat.id);
      } else if (text === '/help') {
        await help(msg.chat.id);
      }
    }
  } catch {}
  setTimeout(poll, 500);
}

console.log('ü§ñ Manager bot poller started. Waiting for /start ...');
poll();
